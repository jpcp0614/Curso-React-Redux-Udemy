{"ast":null,"code":"var _jsxFileName = \"/home/jp/Documents/Curso-React_Redux-Udemy/calculadora/src/main/Calculator.jsx\";\nimport React, { Component } from 'react';\nimport './Calculator.css';\nimport Button from '../components/Button';\nimport Display from '../components/Display';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  displayValue: '0',\n  clearDisplay: false,\n  operation: null,\n  values: [0, 0],\n  current: 0\n};\n\nclass Calculator extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = { ...initialState\n    };\n\n    this.clearMemory = () => {\n      this.setState({ ...initialState\n      });\n    };\n\n    this.setOperation = operation => {\n      if (this.state.current === 0) {\n        this.setState({\n          operation,\n          current: 1,\n          clearDisplay: true\n        });\n      } else {\n        const equals = operation === '=';\n        const currentOperation = this.state.operation;\n        const values = [...this.state.values];\n        values[0] = eval(`${values[0]} ${currentOperation} ${values[1]}`);\n        values[1] = 0;\n        this.setState({\n          displayValue: values[0],\n          operation: equals ? null : operation,\n          current: equals ? 0 : 1,\n          clearDisplay: !equals,\n          values\n        });\n      }\n    };\n\n    this.addDigit = n => {\n      // usar o ponto somente uma vez\n      if (n === '.' && this.state.displayValue.includes('.')) {\n        return;\n      } // limpar quando tiver 0 no display ou clearDisplay estiver true\n\n\n      const clearDisplay = this.state.displayValue === '0' || this.state.clearDisplay; // se o display está limpo ou não\n\n      const currentValue = clearDisplay ? '' : this.state.displayValue; // novo valor que será colocado no display\n\n      const displayValue = currentValue + n; // digito o valor, a flag clearDisplay deve ser false\n\n      this.setState({\n        displayValue,\n        clearDisplay: false\n      });\n\n      if (n !== '.') {\n        const i = this.state.current;\n        const newValue = parseFloat(displayValue);\n        const values = [...this.state.values];\n        values[i] = newValue;\n        this.setState({\n          values\n        });\n      }\n    };\n  }\n\n  render() {\n    const {\n      clearMemory,\n      setOperation,\n      addDigit\n    } = this;\n    const {\n      displayValue\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calculator\",\n      children: [/*#__PURE__*/_jsxDEV(Display, {\n        value: displayValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"AC\",\n        click: clearMemory,\n        triple: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"/\",\n        click: setOperation,\n        operation: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"7\",\n        click: addDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"8\",\n        click: addDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"9\",\n        click: addDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"*\",\n        click: setOperation,\n        operation: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"4\",\n        click: addDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"5\",\n        click: addDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"6\",\n        click: addDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"-\",\n        click: setOperation,\n        operation: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"1\",\n        click: addDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"2\",\n        click: addDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"3\",\n        click: addDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"+\",\n        click: setOperation,\n        operation: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"0\",\n        click: addDigit,\n        double: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \".\",\n        click: addDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"=\",\n        click: setOperation,\n        operation: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Calculator;","map":{"version":3,"names":["React","Component","Button","Display","initialState","displayValue","clearDisplay","operation","values","current","Calculator","state","clearMemory","setState","setOperation","equals","currentOperation","eval","addDigit","n","includes","currentValue","i","newValue","parseFloat","render"],"sources":["/home/jp/Documents/Curso-React_Redux-Udemy/calculadora/src/main/Calculator.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport './Calculator.css';\n\nimport Button from '../components/Button';\nimport Display from '../components/Display';\n\nconst initialState = {\n  displayValue: '0',\n  clearDisplay: false,\n  operation: null,\n  values: [0, 0],\n  current: 0\n}\n\nclass Calculator extends Component {\n\n  state = { ...initialState }\n\n  clearMemory = () => {\n    this.setState({ ...initialState });\n  }\n\n  setOperation = (operation) => {\n    if (this.state.current === 0) {\n      this.setState({\n        operation,\n        current: 1,\n        clearDisplay: true\n      });\n    } else {\n      const equals = operation === '=';\n      const currentOperation = this.state.operation;\n      const values = [...this.state.values];\n\n        values[0] = eval(`${values[0]} ${currentOperation} ${values[1]}`);\n        values[1] = 0;\n\n        this.setState({\n          displayValue: values[0],\n          operation: equals ? null : operation,\n          current: equals ? 0 : 1,\n          clearDisplay: !equals,\n          values\n        });\n\n    }\n  }\n\n  addDigit = (n) => {\n    // usar o ponto somente uma vez\n    if (n === '.' && this.state.displayValue.includes('.')) {\n      return;\n    }\n\n    // limpar quando tiver 0 no display ou clearDisplay estiver true\n    const clearDisplay = this.state.displayValue === '0' || this.state.clearDisplay;\n\n    // se o display está limpo ou não\n    const currentValue = clearDisplay ? '' : this.state.displayValue;\n\n    // novo valor que será colocado no display\n    const displayValue = currentValue + n;\n\n    // digito o valor, a flag clearDisplay deve ser false\n    this.setState({ displayValue, clearDisplay: false });\n\n    if (n !== '.') {\n      const i = this.state.current;\n      const newValue = parseFloat(displayValue);\n      const values = [...this.state.values];\n      values[i] = newValue;\n      this.setState({ values });\n    }\n  }\n\n  render () {\n\n    const { clearMemory, setOperation, addDigit } = this;\n    const { displayValue } = this.state;\n\n    return (\n      <div className=\"calculator\">\n        <Display value={ displayValue }/>\n        <Button label=\"AC\" click={ clearMemory } triple/>\n        <Button label=\"/\" click={ setOperation } operation/>\n        <Button label=\"7\" click={ addDigit }/>\n        <Button label=\"8\" click={ addDigit }/>\n        <Button label=\"9\" click={ addDigit }/>\n        <Button label=\"*\" click={ setOperation } operation/>\n        <Button label=\"4\" click={ addDigit }/>\n        <Button label=\"5\" click={ addDigit }/>\n        <Button label=\"6\" click={ addDigit }/>\n        <Button label=\"-\" click={ setOperation } operation/>\n        <Button label=\"1\" click={ addDigit }/>\n        <Button label=\"2\" click={ addDigit }/>\n        <Button label=\"3\" click={ addDigit }/>\n        <Button label=\"+\" click={ setOperation } operation/>\n        <Button label=\"0\" click={ addDigit } double/>\n        <Button label=\".\" click={ addDigit }/>\n        <Button label=\"=\" click={ setOperation } operation/>\n      </div>\n    );\n  }\n}\n\nexport default Calculator;"],"mappings":"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"},"metadata":{},"sourceType":"module"}